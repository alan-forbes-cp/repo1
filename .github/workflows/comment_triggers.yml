name: PR comment trigger

on:
  issue_comment:
    # applies to both issues and PRs - limit to PRs only in jobs below
    types:
      - created # new comments only - no edits or deletions
      # - edited
      # - deleted
  
jobs:
  pr_comments:
    # Job runs for:
    # * new comments only
    # * PR comments only (Issue comments are skipped - see 'issue_comment:' above)
    # * comments from a specific user only
    # * specifc comments only
    # * open PRs only
    # Requires:
    # * GH cli must be available on runner
    name: PR comments
    if: ${{ github.event.issue.pull_request && (github.event.comment.user.login == 'alan-forbes-cp') }}
    runs-on: ubuntu-latest
    steps:
      - name: check PR status and get associated repo ref
        id: PR_REF
        run: |
          STATE=$(gh pr view $PR_NUMBER --repo $REPO --json state --jq .state)
          if [ "$STATE" != "OPEN" ]; then
            echo "PR not open - quitting ..."
            exit 1
          fi
          echo "PR_REF=$(gh pr view $PR_NUMBER --repo $REPO --json headRefOid | jq -r '.headRefOid')" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.getRef.outputs.PR_REF }}
      - name: do build stuff
        if: ${{ github.event.comment.body == '/build' }}
        run: |
          echo A build comment on OPEN PR $PR_NUMBER
          ls -l
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
      - name: do non-build stuff
        if: ${{ !(github.event.comment.body == '/build') }}
        run: |
          echo A non-build comment on OPEN PR $PR_NUMBER
          ls -l
        env:
          PR_NUMBER: ${{ github.event.issue.number }}

#  issue_specific_comment:
#    # This job only runs for specific issue comments
#    name: Specific issue comment
#    if: ${{ !github.event.issue.pull_request && github.event.comment.body == '/build' }}
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          echo A specific comment on issue $PR_NUMBER
#        env:
#          PR_NUMBER: ${{ github.event.issue.number }}
#
#  issue_contains_comment:
#    # This job only runs for issue contains comments
#    name: Issue contains comment
#    if: ${{ !github.event.issue.pull_request && contains(github.event.comment.body, 'string') }}
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          echo A contains comment on issue $PR_NUMBER
#        env:
#          PR_NUMBER: ${{ github.event.issue.number }}
#
#  issue_commented:
#    # This job only runs for issue comments that dont match strings
#    name: Non-matching issue comment
#    if: ${{ !github.event.issue.pull_request && !(github.event.comment.body == '/build') && !(contains(github.event.comment.body, 'string')) }}
#    runs-on: ubuntu-latest
#    steps:
#      - run: |
#          echo A non-match comment on issue $PR_NUMBER
#        env:
#          PR_NUMBER: ${{ github.event.issue.number }}

