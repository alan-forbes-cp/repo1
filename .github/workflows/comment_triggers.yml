name: PR internal test comment trigger

on:
  issue_comment:
    # "Every pull request is an issue, but not every issue is a pull request."
    # - limit to PRs only in jobs: below
    types:
      - created # new comments only - no edits or deletions
      # - edited
      # - deleted
  
env:
  TEST_LIST: "/scottstraughan/verify /Xalan-forbes-cp/verify"
#  TEST_LIST: ${{ secrets.INTERNAL_TEST_LIST }}

jobs:
  pr_internal_test_trigger_check:
    # Checks for:
    # * new comments (See 'issue_comment:types' above)
    # * PR comments (Issue comments are skipped - also see 'issue_comment:' above)
    # * comments from specific user(s)
    # * specific trigger string (comment-body content e.g. "/verify")
    # * open PRs
    # Requires:
    # * Github's 'gh' cli must be available on runner
    name: PR internal test trigger check
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    outputs:
      checked: ${{ steps.trigger_check.outputs.checked }}
    steps:
      - name: Check trigger
        id: trigger_check
        run: |
          STATE=$(gh pr view $PR_NUMBER --repo $GH_REPO --json state --jq .state)
          if [ "$STATE" != "OPEN" ]; then
            echo "PR is not open - quitting ..."
            exit 1
          fi
          echo user: $PR_USER
          echo body: $PR_BODY
          echo list: $PR_LIST
          if [[ ! "${PR_LIST}" =~ "/${PR_USER}${PR_BODY}" ]] ; then
            echo "PR trigger check failed - quitting ..."
            exit 1
          fi
          echo "checked=YES" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
        env:
          PR_USER: ${{ github.event.comment.user.login }}
          PR_BODY: ${{ github.event.comment.body }}
          PR_LIST: ${{ env.TEST_LIST }}
          PR_NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}

  pr_internal_test_process_trigger:
    # Creates new PR comment with internal test request data:
    # * trigger string
    # * PR repo ref
    # * commentator name
    # Requires:
    # * Github's 'gh' cli must be available on runner
    name: PR internal test trigger processing
    needs: pr_internal_test_trigger_check
    if: ${{ github.event.issue.pull_request && (needs.pr_internal_test_trigger_check.outputs.checked == 'YES') }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Obtain PR repo ref
        id: PR_REF
        run: |
          echo "pr_ref=$(gh pr view $PR_NUMBER --repo $GH_REPO --json headRefOid | jq -r '.headRefOid')" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
      - name: Add comment with internal test request data
        run: |
          gh issue comment "$PR_NUMBER" --body "$BODY"
        env:
          PR_NUMBER: ${{ github.event.issue.number }}
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          BODY: >
            ${{ github.event.comment.body }}
            ${{ steps.PR_REF.outputs.pr_ref }}
            ${{ github.event.comment.user.login }}
      - name: Example build 1 - checkout PR ref
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ steps.PR_REF.outputs.pr_ref }}
      - name: Example build 2 - list latest commit and repo content
        run: |
          git log -1
          ls -l
